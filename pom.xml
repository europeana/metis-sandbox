<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.europeana.metis</groupId>
  <artifactId>metis-sandbox</artifactId>
  <version>10.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>metis-sandbox</name>
  <description>Metis sandbox pilot</description>
  <!-- GitHub connection -->
  <scm>
    <connection>scm:git:https://github.com/europeana/metis-sandbox</connection>
    <url>https://github.com/europeana/metis-sandbox</url>
    <tag>HEAD</tag>
    <developerConnection>scm:git:https://github.com/europeana/metis-sandbox</developerConnection>
  </scm>

  <distributionManagement>
    <repository>
      <id>artifactory.eanadev.org</id>
      <name>artifactory.eanadev.org-releases</name>
      <url>https://artifactory.eanadev.org/artifactory/libs-release-local</url>
    </repository>
    <snapshotRepository>
      <id>artifactory.eanadev.org</id>
      <name>artifactory.eanadev.org-snapshots</name>
      <url>https://artifactory.eanadev.org/artifactory/libs-snapshot-local</url>
    </snapshotRepository>
  </distributionManagement>

  <properties>
    <version.java>21</version.java>
    <version.springdoc-openapi-starter-webmvc-ui>2.3.0</version.springdoc-openapi-starter-webmvc-ui>
    <version.metis>14</version.metis>
    <version.metis.normalization>14</version.metis.normalization>
    <version.spring.boot>3.2.3</version.spring.boot>
    <version.europeana>2.16.10-SNAPSHOT</version.europeana>
    <version.postgresql>42.7.2</version.postgresql>
    <version.aws.s3>1.12.261</version.aws.s3>
    <version.maven.compiler.plugin>3.12.1</version.maven.compiler.plugin>
    <version.coveralls>4.0.0</version.coveralls>
    <version.surefire.plugin>3.1.2</version.surefire.plugin>
    <version.failsafe.plugin>3.1.2</version.failsafe.plugin>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.slf4j>2.0.12</version.slf4j>
    <version.log4j>2.21.1</version.log4j>
    <version.logcaptor>2.7.8</version.logcaptor>
    <version.wiremock>3.4.2</version.wiremock>
    <version.commons.collections4>4.4</version.commons.collections4>
    <version.stax2-api>4.2</version.stax2-api>
    <version.woodstox-core>6.4.0</version.woodstox-core>
    <version.testcontainers>1.19.7</version.testcontainers>
    <version.awaitability>4.2.0</version.awaitability>
    <version.micrometer>1.10.6</version.micrometer>
    <version.elastic.apm>1.48.1</version.elastic.apm>
    <version.netty>4.1.108.Final</version.netty>
    <version.reactor>3.4.24</version.reactor>
    <version.rabbittest>2.4.5</version.rabbittest>
    <version.bucket4j>8.3.0</version.bucket4j>
    <version.postgresql.bucket4j>8.1.1</version.postgresql.bucket4j>
    <version.guava>32.1.3-jre</version.guava>
    <version.mockito-core>5.8.0</version.mockito-core>
    <version.xml.bind>4.0.2</version.xml.bind>
  </properties>
  <dependencies>
    <!-- Rate limiting dependencies-->
    <dependency>
      <groupId>com.bucket4j</groupId>
      <artifactId>bucket4j-core</artifactId>
      <version>${version.bucket4j}</version>
    </dependency>
    <dependency>
      <groupId>com.bucket4j</groupId>
      <artifactId>bucket4j-postgresql</artifactId>
      <version>${version.postgresql.bucket4j}</version>
      <exclusions>
        <exclusion>
          <groupId>com.zaxxer</groupId>
          <artifactId>HikariCP-java6</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
      <!-- guava -->
      <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>${version.guava}</version>
      </dependency>
    <!-- Spring boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-jdbc</artifactId>
    </dependency>
    <!-- Europeana -->
    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-transformation-service</artifactId>
      <version>${version.metis}</version>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-validation-service</artifactId>
      <version>${version.metis}</version>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-normalization</artifactId>
      <version>${version.metis.normalization}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-enrichment-client</artifactId>
      <version>${version.metis}</version>
      <exclusions>
        <exclusion>
          <groupId>eu.europeana.corelib</groupId>
          <artifactId>corelib-lookup</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webflux</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.projectreactor</groupId>
          <artifactId>reactor-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- client entity api dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.projectreactor.netty</groupId>
          <artifactId>reactor-netty</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-http2</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-resolver-dns</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-codec-dns</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-transport</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-resolver</artifactId>
      <version>${version.netty}</version>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
      <version>${version.reactor}</version>
    </dependency>
    <!-- end of client entity api entities -->

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-harvesting</artifactId>
      <version>${version.metis}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <!-- Exclude these two to avoid conflicts. Look at their explicit declaration. -->
        <exclusion>
          <groupId>org.codehaus.woodstox</groupId>
          <artifactId>stax2-api</artifactId>
        </exclusion>
        <!-- This is not really part of the library, but we excluded just in case.-->
        <exclusion>
          <groupId>com.fasterxml.woodstox</groupId>
          <artifactId>woodstox-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-debias-detect-service</artifactId>
      <version>${version.metis}</version>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-media-service</artifactId>
      <version>${version.metis}</version>
      <!-- Exclude these two to avoid conflicts. Look at their explicit declaration. -->
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.woodstox</groupId>
          <artifactId>stax2-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.woodstox</groupId>
          <artifactId>woodstox-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-indexing</artifactId>
      <version>${version.metis}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <!-- Exclude these two to avoid conflicts. Look at their explicit declaration. -->
        <exclusion>
          <groupId>org.codehaus.woodstox</groupId>
          <artifactId>stax2-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.woodstox</groupId>
          <artifactId>woodstox-core-asl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.module</groupId>
          <artifactId>jackson-module-jaxb-annotations</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--
    * Include specifically the stax2-api we want.
    * We also add the woodstox-core library that is compatible with stax2-api.
      This library is not specifically required by stax2-api, but we added since it was used from other libraries, just in case.
    * These two libraries should be compatible with metis-harvesting, metis-media-service and metis-indexing
    * The stax2-api, woodstox-core and woodstox-core-asl(older version of woodstox-core) are explicitly excluded from
      the aforementioned metis libraries to avoid conflicts
    -->
    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>stax2-api</artifactId>
      <version>${version.stax2-api}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.woodstox</groupId>
      <artifactId>woodstox-core</artifactId>
      <version>${version.woodstox-core}</version>
    </dependency>

    <dependency>
      <groupId>eu.europeana.metis</groupId>
      <artifactId>metis-pattern-analysis</artifactId>
      <version>${version.metis}</version>
    </dependency>

    <dependency>
      <groupId>eu.europeana.corelib</groupId>
      <artifactId>corelib-web</artifactId>
      <version>${version.europeana}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-all</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${version.mockito-core}</version>
      <scope>test</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.postgresql}</version>
    </dependency>

    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <version>${version.aws.s3}</version>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- testcontainers -->
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-compress</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mongodb</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>solr</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>localstack</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>rabbitmq</artifactId>
      <version>${version.testcontainers}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.amqp</groupId>
      <artifactId>spring-rabbit-test</artifactId>
      <version>${version.rabbittest}</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${version.awaitability}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${version.wiremock}</version>
      <scope>test</scope>
    </dependency>

    <!-- Swagger -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>${version.springdoc-openapi-starter-webmvc-ui}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${version.commons.collections4}</version>
    </dependency>

    <!--Metrics-->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${version.micrometer}</version>
    </dependency>
    <dependency>
      <groupId>co.elastic.apm</groupId>
      <artifactId>apm-agent-attach</artifactId>
        <version>${version.elastic.apm}</version>
    </dependency>

    <!-- jakarta xml -->
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>${version.xml.bind}</version>
    </dependency>

  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${version.spring.boot}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>

    <!--Release repositories-->
    <repository>
      <id>libs-release</id>
      <name>libs-release</name>
      <url>https://artifactory.eanadev.org/artifactory/libs-release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <!--Snapshot repositories-->
    <repository>
      <id>libs-snapshot</id>
      <name>libs-snapshots</name>
      <url>https://artifactory.eanadev.org/artifactory/libs-snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${version.spring.boot}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.surefire.plugin}</version>
        <configuration>
          <systemPropertyVariables>
            <!--Temporary argument to bypass exception on inline mockito mocks(coming from transitive bytebuddy dependency).-->
            <!--Remove this when mockito has been updated to work with java 21(At time of writing 5.8.0 does not work).-->
            <net.bytebuddy.experimental>true</net.bytebuddy.experimental>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*Test.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${version.failsafe.plugin}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.outputDirectory}</classesDirectory>
              <includes>
                <include>**/*IT.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>${version.coveralls}</version>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven.compiler.plugin}</version>
          <configuration>
            <release>${version.java}</release>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>

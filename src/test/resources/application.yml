info:
  app:
    title: &name Metis Sandbox
    description: Sandbox to process Datasets
    version: 1.0.0
    repository: https://github.com/europeana/metis-sandbox

spring:
  profiles:
    active: test
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: none
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration
      - org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration
  servlet:
    multipart:
      max-file-size: 5MB

sandbox:
  cors:
    mapping: '*'
  validation:
    executor:
      pool-size: 10
    predefinedSchemas:
      EDM-INTERNAL:
        url:
        rootLocation:
        schematronLocation:
      EDM-EXTERNAL:
        url:
        rootLocation:
        schematronLocation:
  transformation:
    xslt-url: test.xsl
  enrichment:
    dereference-url: http://metis-test
    enrichment-url: http://metis-test
  preview:
    mongo:
      db: metis-sandbox-test
      hosts: localhost
      ports: 27017
    solr:
      hosts: http://metis-test:8888/solr/metis_sandbox_test
  publish:
    mongo:
      db: metis-sandbox-test
      hosts: localhost
      ports: 27017
    solr:
      hosts: http://metis-test:8888/solr/metis_sandbox_test
  portal:
    preview:
      url: http://metis-test
    publish:
      url: http://metis-test
  truststore:
    path:
    password:
  datasource:
    jdbcUrl: jdbc:h2:mem:sandbox
    driverClassName: org.h2.Driver
    username: sandbox
    password:
  s3:
    access-key:
    secret-key:
    endpoint: some-uri
    signing-region: eu
    thumbnails-bucket: bucket
  dataset:
    clean:
      frequency: "-" # Indicates a disabled cron
      days-to-preserve: 7
    max-size: 1000
    creation:
      threads:
        core-pool-size: 5
        max-pool-size: 5
        thread-prefix: sandbox-test-
  rabbitmq:
    routing-key:
      closed: sandbox.record.closed
    exchange:
      name: sandbox
      dlq: ${sandbox.rabbitmq.exchange.name}.dlq
    queues:
      record:
        log:
          queue: sandbox.record.log
          dlq: ${sandbox.rabbitmq.queues.record.log.queue}.dlq
          routing-key: sandbox.record.#
          consumers: 20
          max-consumers: 40
        created:
          queue: sandbox.record.created
          dlq: ${sandbox.rabbitmq.queues.record.created.queue}.dlq
        ordered:
          queue: sandbox.record.ordered
          dlq: ${sandbox.rabbitmq.queues.record.ordered.queue}.dlq
        validated:
          external:
            queue: sandbox.record.validated.external
            dlq: ${sandbox.rabbitmq.queues.record.validated.external.queue}.dlq
          internal:
            queue: sandbox.record.validated.internal
            dlq: ${sandbox.rabbitmq.queues.record.validated.internal.queue}.dlq
        transformed:
          queue: sandbox.record.transformed
          dlq: ${sandbox.rabbitmq.queues.record.transformed.queue}.dlq
        normalized:
          queue: sandbox.record.normalized
          dlq: ${sandbox.rabbitmq.queues.record.normalized.queue}.dlq
        enriched:
          queue: sandbox.record.enriched
          dlq: ${sandbox.rabbitmq.queues.record.enriched.queue}.dlq
        media:
          queue: sandbox.record.media.processed
          dlq: ${sandbox.rabbitmq.queues.record.media.queue}.dlq
        previewed:
          queue: sandbox.record.previewed
          dlq: ${sandbox.rabbitmq.queues.record.previewed.queue}.dlq
        published:
          queue: sandbox.record.published
          dlq: ${sandbox.rabbitmq.queues.record.published.queue}.dlq
